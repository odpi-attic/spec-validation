/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * <p/>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p/>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'groovy'

repositories {
  mavenCentral()
}

dependencies {
}

subprojects {

  ext.hadoopVersion = '2.6.0'
  //Note you need a snapshot itest to run this.
  ext.doExclude = { String filename ->
    //print("Exclude? ${filename} ... ")
    def keep_this_test = true;
    if (filename.contains(".groovy") ||
        filename.contains(".java")) {
      keep_this_test =
          tests_to_include().find({
            it.contains(filename)
          }) != null;
    }

    //println("Keep = ${keep_this_test} "+filename);
    return !keep_this_test;
  }

  println("Now testing...");
  test {

    //todo, add back in 'basic' after BIGTOP-1392 .
    testLogging {
      events "passed", "skipped", "failed"
    }
  }

  /**
   *  Utility function for tests to use to confirm EVN Variables.
   */
  ext.checkEnv = { env_vars ->
    env_vars.each() {
      def value = System.getenv("${it}")
      if (value == null || value == "null")
        throw new GradleException("undeclared env variable: ${it}")
      else
        println("ENV VARIABLE: ${it} = $value");
    }
  }

  /**
  * Two important environment variables.
  *  java_home should be declared in all cases.
  * itest can be greater than or equal to = 0.7.0, 0.8.0
  */
  checkEnv(["JAVA_HOME","ITEST"])
  ext.itestVersion = System.getenv("ITEST")

  test.dependsOn compileGroovy
  compileGroovy.dependsOn clean
}
